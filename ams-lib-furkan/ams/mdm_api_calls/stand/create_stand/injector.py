"""
This module contains the injector to create a stand resource
"""

import protocols.broker
from .injector_rest import injector as rest_injector

# pylint: disable=line-too-long


def create_stand(session_key="defaultKey", **kwargs):
    """
    Create a stand.

    | ``session_key``                  | session alias. If no value specified, default key "defaultKey" is used |


    Other parameters are passed as couple key=value through ``**kwargs`` (keyword arguments). Below the possible values:

    | *Arguments*                        | *Description*                                                                                                    |

    | ``expected_response_code``         | expected response code from the api response                                                                     |
    | ``endpoint_type``                  | endpoint url to send the resource creation details                                                               |
    | ``name``                           | if passed, it will override the autogenerated name                                                               |
    | ``type``                           | type of the stand [valid values: CONTACT, REMOTE, HANGAR, TAXIWAY, DEICING]                                      |
    | ``arrival_security_level``         | allowed security level [valid values: DOMESTIC, SCHENGEN, EU, INTERNATIONAL, CRITICAL, EUSAFE]                   |
    | ``departure_security_level``       | allowed security level [valid values: DOMESTIC, SCHENGEN, EU, INTERNATIONAL, CRITICAL, EUSAFE]                   |
    | ``gate_connection``                | YES or NO                                                                                                        |
    | ``gate_id``                        | valid gate resource id [e.g. GAT000277] to be passed only if gate_conenction is YES                              |
    | ``equipment_connection``           | YES or NO                                                                                                        |
    | ``equipment_type``                 | valid type of equipment [AIRBRIDGE, WALKIE, PHONE, STAIRCASE] to be passed only if equipment_connection is YES   |


    === Usage: ===
    | Create Stand    expected_response_code=200    endpoint_type=stand   name=ROBOT_Stand    type=HANGAR

    """
    return protocols.broker.injector(kwargs, session_key, rest_injector)
